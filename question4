#include "DHT.h"
#include <ESP8266WiFi.h>


String apiKey = "7KBHLL2NMS5GYNGU"; //  API key from ThingSpeak

const char *ssid =  "CANALBOX-2D17";
const char *pass =  "6394357503";
const char* server = "api.thingspeak.com";

WiFiClient client;

// Moisture variables
int moisture_read;
int moisture = 0;

int moisturePin = A0;

// Temprature Vatiables
int DHTPIN = D1;
int DHTTYPE = DHT11;

// Initialize DHT sensor for normal 16mhz Arduino
DHT dht(DHTPIN, DHTTYPE);

// Fan Variables
int fanPin = D3;
int fanState = 0;


void setup() {

  pinMode(moisturePin, INPUT);
  pinMode(fanPin, OUTPUT);

  digitalWrite(fanPin, HIGH); // Inverse relay so this turns fan off.


  Serial.begin(9600);

  // Setup the light sensor to collect input
  dht.begin();

  // Initialize wifi connection
  WiFi.begin(ssid, pass);

  // Wait untill wifi is connected.
  while (WiFi.status() != WL_CONNECTED)
  {
    delay(500);
    Serial.print(".");
  }

}

void loop() {

  delay(10); // Wait for 10 millisecond(s)

  float temperature = dht.readTemperature();

  // Toggle fan if temprature is high.
  if (temperature < 20) {
    digitalWrite(fanPin, HIGH);
    fanState = 0;
  } else {
    digitalWrite(fanPin, LOW);
    fanState = 1;
  }

  delay(10); // Wait for 10 millisecond(s)
  moisture = map(analogRead(moisturePin), 1023, 0, 0, 100);
  
  // Send sensor values to thingspeak
  if (client.connect(server, 80))  //   "184.106.153.149" or api.thingspeak.com
  {

    String postStr = apiKey;
    postStr += "&field1=";
    postStr += String(temperature);
    postStr += "&field2=";
    postStr += String(moisture);
    postStr += "&field3=";
    postStr += String(fanState);
    postStr += "\r\n\r\n";

    client.print("POST /update HTTP/1.1\n");
    client.print("Host: api.thingspeak.com\n");
    client.print("Connection: close\n");
    client.print("X-THINGSPEAKAPIKEY: " + apiKey + "\n");
    client.print("Content-Type: application/x-www-form-urlencoded\n");
    client.print("Content-Length: ");
    client.print(postStr.length());
    client.print("\n\n");
    client.print(postStr);
  }
  client.stop();
  delay(1000);
}
